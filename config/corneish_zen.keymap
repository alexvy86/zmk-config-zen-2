#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};

// User-friendly definitions for key positions
#include "../keypos_def/keypos_42keys.h"
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5 // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5 // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                                 // thumb keys

// Desktop and tab navigation shortcuts
#define PRV_VD  LC(LG(LEFT))
#define NXT_VD  LC(LG(RIGHT))
#define PRV_TAB LC(LS(TAB))
#define NXT_TAB LC(TAB)
#define GS_LFT  LG(LS(LEFT))
#define GS_RGT  LG(LS(RIGHT))
#define G_LFT   LG(LEFT)
#define G_RGT   LG(RIGHT)
#define CA_TAB  LC(LA(TAB))
#define CA_LSFT LC(LA(LSFT))
#define PS_BRK  PAUSE_BREAK // Just for brevity

// Application shortcuts
#define GIT_GRAPH LC(LA(LG(LS(G))))
#define FOLDER_UP LC(LA(LG(LS(U))))
#define TERM      LC(GRAVE)
#define NEW_TERM  LC(LS(GRAVE))
#define PRV_TERM  LC(PG_UP)
#define NXT_TERM  LC(PG_DN)
#define OPSWD_BRW LC(LS(X))
#define OPSWD_WIN LC(LS(SPACE))
#define PTOYS_RUN LG(LS(SPACE))

// Layers
#define LY_BASE 0
#define LY_NUM  1
#define LY_NAV  2
#define LY_FN1  3
#define LY_MIS1 4
#define LY_MIS2 5
#define LY_GAM  6
#define LY_GNUM 7

// Configuration for sticky-key behavior
&sk {
  release-after-ms = <500>;
  quick-release;
};

// Configuration for home-row mods
#define QUICK_TAP_MS 100
#define GLOBAL_QUICK_TAP_MS 100
#define TAP_TERM_MS 200
/ {
  behaviors {
    // Non-shift homerow mod for left hand
    hml: hml {
      label = "ZB_hml";
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
      tapping-term-ms = <TAP_TERM_MS>;
      quick-tap-ms = <QUICK_TAP_MS>;
      global-quick-tap-ms = <GLOBAL_QUICK_TAP_MS>; // requires PR #1387, currently obtained by using urob's fork of zmk
      hold-trigger-on-release;                     // requires PR #1423, currently obtained by using urob's fork of zmk
      hold-trigger-key-positions = <KEYS_R THUMBS>;
    };

    // Shift homerow mod for left hand
    hmsl: hmsl {
      label = "ZB_hmsl";
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
      tapping-term-ms = <TAP_TERM_MS>;
      quick-tap-ms = <QUICK_TAP_MS>;
      hold-trigger-on-release;                     // requires PR #1423, currently obtained by using urob's fork of zmk
      hold-trigger-key-positions = <KEYS_R THUMBS>;
    };

    // Non-shift homerow mod for right hand
    hmr: hmr {
      label = "ZB_hmr";
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
      tapping-term-ms = <TAP_TERM_MS>;
      quick-tap-ms = <QUICK_TAP_MS>;
      global-quick-tap-ms = <GLOBAL_QUICK_TAP_MS>; // requires PR #1387, currently obtained by using urob's fork of zmk
      hold-trigger-on-release;                     // requires PR #1423, currently obtained by using urob's fork of zmk
      hold-trigger-key-positions = <KEYS_L THUMBS>;
    };

    // Shift homerow mod for right hand
    hmsr: hmsr {
      label = "ZB_hmsr";
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
      tapping-term-ms = <TAP_TERM_MS>;
      quick-tap-ms = <QUICK_TAP_MS>;
      hold-trigger-on-release;                     // requires PR #1423, currently obtained by using urob's fork of zmk
      hold-trigger-key-positions = <KEYS_L THUMBS>;
    };

    // tap: sticky shift | double tap: capsword | triple tap: cancel capsword
    td_shft: td_shft {
      compatible = "zmk,behavior-tap-dance";
      label = "TD_SHFT";
      #binding-cells = <0>;
      tapping-term-ms = <TAP_TERM_MS>;
      bindings = <&sk LSHFT>, <&caps_word>, <&kp K_CANCEL>;
    };

    td_layers: td_layers {
      compatible = "zmk,behavior-tap-dance";
      label = "TD_LAYERS";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&to LY_BASE>, <&to LY_GAM>;
    };

    lt_customshift: lt_customshift {
      label = "ZB_lt_customshift";
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "balanced";
      bindings = <&mo>, <&td_shft>;
      tapping-term-ms = <100>;
      quick-tap-ms = <QUICK_TAP_MS>;
      global-quick-tap-ms = <GLOBAL_QUICK_TAP_MS>; // requires PR #1387, currently obtained by using urob's fork of zmk
    };
  };
};

/ {
  macros {
//     ZMK_MACRO(term,
//       wait-ms = <20>;
//       tap-ms = <20>;
//       bindings = <&macro_press &kp LCTRL>
//                , <&macro_tap &kp GRAVE>
//                , <&macro_release &kp LCTRL>;
//     )
    };
};

// ¯\_(ツ)_/¯

// Thumb keys for base layer
#define THUMB1 &lt LY_MIS2 ESC
#define THUMB2 &lt LY_FN1 TAB
#define THUMB3 &lt LY_NAV SPACE
#define THUMB4 &lt_customshift LY_NUM 0
#define THUMB5 &lt LY_MIS1 BSPC
#define THUMB6 &td_layers

/ {
  keymap {
    compatible = "zmk,keymap";

// &out OUT_TOG
// OUT_USB	Prefer sending to USB
// OUT_BLE	Prefer sending to the current bluetooth profile
// OUT_TOG	Toggle between USB and BLE

// Mouse keys
// https://github.com/manna-harbour/miryoku_zmk#mouse-keys
// https://github.com/doththouevenhoist/zmk-config-Corne-ish-Zen/blob/4cafe5ca22919e84e826a7413b5f4b092ada6730/config/corne-ish_zen.keymap#L10

    base_layer {
      label = "DVORAK";
      bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      // ├      \      ┼      '      ┼      ,      ┼      .      ┼      P      ┼      Y      ┤ ├      F      ┼      G      ┼      C      ┼      R      ┼      L      ┼      /      ┤
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      // ├      `      ┼  LSHFT / A  ┼  LALT / O   ┼  LGUI / E   ┼  LCTRL / U  ┼      I      ┤ ├      D      ┼  LCTRL / H  ┼  LGUI / T   ┼  LALT / N   ┼  LSHFT / S  ┼      -      ┤
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      // ├ Custom Shft ┼      ;      ┼  RALT / Q   ┼      J      ┼      K      ┼      X      ┤ ├      B      ┼      M      ┼      W      ┼  RALT / V   ┼      Z      ┼    ENTER    ┤
      // ╰───────────────────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┴───────────────────────────╯
      //                                           ├ ESC / MSC2  ┼ TAB / FN_LY ┼  SPC / LT2  ┤ ├ SSHFT / LT1 ┼ BKSP / MSC1 ┼ TO GAMES LY ┤
      //                                           ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
          &kp BSLH      &kp SQT       &kp COMMA     &kp DOT       &kp P         &kp Y           &kp F         &kp G         &kp C         &kp R         &kp L         &kp FSLH
          &kp GRAVE     &hmsl LSHFT A &hml LALT O   &hml LGUI E   &hml LCTRL U  &kp I           &kp D         &hmr LCTRL H  &hmr LGUI T   &hmr LALT N   &hmsr LSHFT S &kp MINUS
          &td_shft      &kp SEMI      &hml RALT Q   &kp J         &kp K         &kp X           &kp B         &kp M         &kp W         &hmr RALT V   &kp Z         &kp RET
                                                    THUMB1        THUMB2        THUMB3          THUMB4        THUMB5        &td_layers
      >;
    };

    numbers_layer {
      label = "NUMBER";
      bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      // ├      \      ┼      !      ┼      @      ┼      #      ┼      $      ┼      %      ┤ ├      ^      ┼      &      ┼      *      ┼      (      ┼      )      ┼      /      ┤
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      // ├      `      ┼  LSHFT / 1  ┼  LALT / 2   ┼  LGUI / 3   ┼  LCTRL / 4  ┼      5      ┤ ├      6      ┼  LCTRL / 7  ┼  LGUI / 8   ┼  LALT / 9   ┼  LSHFT / 0  ┼      -      ┤
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      // ├             ┼      [      ┼  RALT / ]   ┼      (      ┼      )      ┼      .      ┤ ├             ┼      +      ┼      =      ┼  RALT / {   ┼      }      ┼    ENTER    ┤
      // ╰───────────────────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┴───────────────────────────╯
      //                                           ├     ESC     ┼     TAB     ┼    SPACE    ┤ ├ // HELD //  ┼             ┼             ┤
      //                                           ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
          &kp BSLH      &kp EXCL       &kp AT         &kp HASH     &kp DOLLAR    &kp PERCENT     &kp CARET     &kp AMPS      &kp ASTRK     &kp LPAR       &kp RPAR       &kp FSLH
          &kp GRAVE     &hmsl LSHFT N1 &hml LALT N2   &hml LGUI N3 &hml LCTRL N4 &kp N5          &kp N6        &hmr LCTRL N7 &hmr LGUI N8  &hmr LALT N9   &hmsr LSHFT N0 &kp MINUS
          &none         &kp LBKT       &hml RALT RBKT &kp LPAR     &kp RPAR      &kp DOT         &none         &kp PLUS      &kp EQUAL     &hmr RALT LBRC &kp RBRC       &kp RET
                                                      &kp ESC      &kp TAB       &kp SPACE       &trans        &none         &none
      >;
    };

    nav_layer {
      label = "NAV";
      bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      // ├             ┼ WIN PRV MON ┼ SNP WIN LFT ┼ SNP WIN RGT ┼ WIN NXT MON ┼             ┤ ├             ┼             ┼   PAGE UP   ┼  PAGE DOWN  ┼             ┼             ┤
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      // ├  Alt + F4   ┼    LSHFT    ┼     LALT    ┼     LGUI    ┼    LCTRL    ┼ CONTEXT MENU┤ ├     HOME    ┼    LEFT     ┼     UP      ┼     DOWN    ┼    RIGHT    ┼     END     ┤
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      // ├             ┼ PRV VIR DSK ┼ NXT VIR DSK ┼  PREV TAB   ┼  NEXT TAB   ┼ CTRL ALT TAB┤ ├     SPC     ┼             ┼             ┼             ┼             ┼             ┤
      // ╰───────────────────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┴───────────────────────────╯
      //                                           ├             ┼             ┼ // HELD //  ┤ ├     BKSP    ┼     DEL     ┼             ┤
      //                                           ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
          &none         &kp GS_LFT    &kp G_LFT     &kp G_RGT     &kp GS_RGT    &none           &none         &none         &kp PG_UP      &kp PG_DN    &none         &none
          &kp LA(F4)    &kp LSHFT     &kp LALT      &kp LGUI      &kp LCTRL     &kp K_APP       &kp HOME      &kp LEFT      &kp UP         &kp DOWN     &kp RIGHT     &kp END
          &none         &kp PRV_VD    &kp NXT_VD    &kp PRV_TAB   &kp NXT_TAB   &kp CA_TAB      &kp SPACE     &none         &none          &none        &none         &none
                                                    &none         &none         &trans          &kp BSPC      &kp DEL       &none
      >;
    };

    function_layer {
      label = "FUNC";
      bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      // ├  Pause/Brk  ┼   INSERT    ┼  CAPS LOCK  ┼ Scroll Lock ┼ PrintScreen ┼             ┤ ├             ┼             ┼             ┼             ┼             ┼             ┤
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      // ├     F1      ┼  LSHFT / F2 ┼  LALT / F3  ┼  LGUI / F4  ┼  LCTRL / F5 ┼     F6      ┤ ├     F7      ┼  LCTRL / F8 ┼  LGUI / F9  ┼  LALT / F10 ┼ LSHFT / F11 ┼     F12     ┤
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      // ├ Discord PTT ┼    Undo     ┼     Cut     ┼    Copy     ┼    Paste    ┼             ┤ ├ Play/Pause  ┼ Media Prev  ┼  Vol Down   ┼   Vol Up    ┼ Media Next  ┼    Mute     ┤
      // ╰───────────────────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┴───────────────────────────╯
      //                                           ├             ┼ // HELD //  ┼             ┤ ├    BKSP     ┼     DEL     ┼             ┤
      //                                           ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
          &kp PS_BRK    &kp INSERT    &kp CAPS      &kp SLCK      &kp PSCRN     &none           &none         &none         &none         &none         &none         &none
          &kp F1        &hmsl LSHFT F2 &hml LALT F3 &hml LGUI F4  &hml LCTRL F5 &kp F6          &kp F7        &hmr LCTRL F8 &hmr LGUI F9  &hmr LALT F10 &hmsr LSHFT F11 &kp F12
          &kp CA_LSFT   &kp LC(Z)     &kp LC(X)     &kp LC(C)     &kp LC(V)     &none           &kp C_PP      &kp C_PREV    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT    &kp C_MUTE
                                                    &none         &trans        &none           &kp BSPC      &kp DEL       &none
      >;
    };

    misc1_layer {
      label = "MISC 1";
      bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      // ├             ┼             ┼             ┼             ┼             ┼             ┤ ├             ┼ Folder Up   ┼ Win Explorer┼             ┼             ┼             ┤
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      // ├             ┼             ┼             ┼             ┼             ┼             ┤ ├ Git Graph   ┼  Terminal   ┼ Prev Term   ┼ Next Term   ┼ New Term    ┼             ┤
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      // ├             ┼             ┼             ┼             ┼             ┼             ┤ ├             ┼             ┼             ┼             ┼             ┼             ┤
      // ╰───────────────────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┴───────────────────────────╯
      //                                           ├             ┼             ┼             ┤ ├             ┼ // HELD //  ┼             ┤
      //                                           ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
          &none         &none         &none         &none         &none         &none           &none         &kp FOLDER_UP &kp LG(E)     &none         &none         &none
          &none         &none         &none         &none         &none         &none           &kp GIT_GRAPH &kp TERM      &kp PRV_TERM  &kp NXT_TERM  &kp NEW_TERM  &none
          &none         &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
                                                    &none         &none         &none           &none         &trans        &none
      >;
    };

    misc2_layer {
      label = "MISC 2";
      bindings = <
      // NOTE: &sys_reset and &bootloader need to be directly bound to a key for locality (correct half affected) to work, see https://github.com/zmkfirmware/zmk/issues/1494
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      // ├    Reset    ┼ Bootloader  ┼             ┼             ┼             ┼ Out Toggle  ┤ ├             ┼             ┼             ┼             ┼ Bootloader  ┼    Reset    ┤
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      // ├             ┼             ┼ PwrToys Run ┼  1Pswd Win  ┼  1Pswd Brw  ┼             ┤ ├             ┼             ┼             ┼             ┼             ┼             ┤
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      // ├ Clr BT prof ┼ BT prof 1   ┼ BT prof 2   ┼ BT prof 3   ┼ BT prof 4   ┼ BT prof 5   ┤ ├             ┼             ┼             ┼             ┼             ┼             ┤
      // ╰───────────────────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┴───────────────────────────╯
      //                                           ├ // HELD //  ┼             ┼             ┤ ├             ┼             ┼             ┤
      //                                           ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
          &sys_reset    &bootloader   &none         &none         &none         &out OUT_TOG    &none         &none         &none         &none         &bootloader   &sys_reset
          &none         &none         &kp PTOYS_RUN &kp OPSWD_WIN &kp OPSWD_BRW &none           &none         &none         &none         &none         &none         &none
          &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none         &none         &none         &none         &none         &none
                                                    &trans        &none         &none           &none         &none         &none
      >;
    };

    gaming_layer {
      label = "GAMING";
      bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      // ├     ESC     ┼      Q      ┼      W      ┼      E      ┼      R      ┼      T      ┤ ├      Y      ┼      U      ┼     Up      ┼      O      ┼      P      ┼             ┤
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      // ├    LSHFT    ┼      A      ┼      S      ┼      D      ┼      F      ┼      G      ┤ ├      H      ┼     Left    ┼    Down     ┼    Right    ┼      ;      ┼             ┤
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      // ├    LCTRL    ┼      Z      ┼      X      ┼      C      ┼      V      ┼      B      ┤ ├      N      ┼      M      ┼      ,      ┼      .      ┼      /      ┼             ┤
      // ╰───────────────────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┴───────────────────────────╯
      //                                           ├  Num Layer  ┼     TAB     ┼    SPACE    ┤ ├    BKSP     ┼             ┼ BACK TO L0  ┤
      //                                           ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
          &kp ESC       &kp Q         &kp W         &kp E         &kp R         &kp T           &kp Y         &kp U         &kp UP        &kp O         &kp P         &none
          &kp LSHFT     &kp A         &kp S         &kp D         &kp F         &kp G           &kp H         &kp LEFT      &kp DOWN      &kp RIGHT     &kp SEMI      &none
          &kp LCTRL     &kp Z         &kp X         &kp C         &kp V         &kp B           &kp N         &kp M         &kp COMMA     &kp DOT       &kp FSLH      &none
                                                    &mo LY_GNUM   &kp TAB       &kp SPACE       &kp BSPC      &none         &td_layers
      >;
    };

    gaming_numbers_layer {
      label = "GAMNUM";
      bindings = <
      // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      // ├             ┼             ┼             ┼             ┼             ┼             ┤ ├             ┼             ┼             ┼             ┼             ┼             ┤
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      // ├             ┼      1      ┼      2      ┼      3      ┼      4      ┼      5      ┤ ├             ┼             ┼             ┼             ┼             ┼             ┤
      // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      // ├             ┼      6      ┼      7      ┼      8      ┼      9      ┼      0      ┤ ├             ┼             ┼             ┼             ┼             ┼             ┤
      // ╰───────────────────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┴───────────────────────────╯
      //                                           ├  // HELD // ┼             ┼             ┤ ├             ┼             ┼             ┤
      //                                           ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
          &none         &none          &none          &none        &none         &none           &none         &none         &none         &none          &none          &none
          &none         &kp N1         &kp N2         &kp N3       &kp N4        &kp N5          &none         &none         &none         &none          &none          &none
          &none         &kp N6         &kp N7         &kp N8       &kp N9        &kp N0          &none         &none         &none         &none          &none          &none
                                                      &trans       &none         &none           &none         &none         &none
      >;
    };

    // template_layer {
    //   label = "TEMPLATE";
    //   bindings = <
    //   // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    //   // ├             ┼             ┼             ┼             ┼             ┼             ┤ ├             ┼             ┼             ┼             ┼             ┼             ┤
    //   // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    //   // ├             ┼             ┼             ┼             ┼             ┼             ┤ ├             ┼             ┼             ┼             ┼             ┼             ┤
    //   // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    //   // ├             ┼             ┼             ┼             ┼             ┼             ┤ ├             ┼             ┼             ┼             ┼             ┼             ┤
    //   // ╰───────────────────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┴───────────────────────────╯
    //   //                                           ├             ┼             ┼             ┤ ├             ┼             ┼             ┤
    //   //                                           ╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
    //       &none         &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
    //       &none         &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
    //       &none         &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
    //                                                 &none         &none         &none           &none         &none         &none
    //   >;
    // };
  };
};
